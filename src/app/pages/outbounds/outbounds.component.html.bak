<div class="row justify-content-between custom-toolbar">
  <div class="col align-self-end">
    <!-- <button routerLink="/outbounds/removalorder" cButton color="primary" style="float: right;">{{"create removal order" | translate}}</button> -->
  </div>
</div>
<c-row>
  <c-col lg="12">
    <c-card class="card-toolbar">
      <c-card-header>
        {{"Shipping Queue" | translate}}
      </c-card-header>
      <c-card-body>
        <table class="table table-responsive-sm table-sm">
          <colgroup>
            <col class="column-1" />
            <col class="column-1" />
            <col class="column-1" />
            <col class="column-1" />
            <col class="column-1" />
            <col class="column-1" />
          </colgroup>
          <thead>
            <tr>
              <th  class="table-header-custom">{{"Shipment ID" | translate}}</th>
              <th  class="table-header-custom">{{"Customer" | translate}}</th>
              <th class="table-header-custom">{{"Status" | translate}}</th>
              <th class="table-header-custom">{{"Created on" | translate}}</th>
              <th class="table-header-custom">{{"Processed Items" | translate}}</th>
              <th></th>
            </tr>
          </thead>
          <thead>
            <tr>
              <th scope="col">
                <input type="text" [(ngModel)]="filterID" class="form-control" />
              </th>
              <th scope="col">
                <input type="text" [(ngModel)]="filterName" class="form-control" />
              </th>
              <th>
                <select class="form-control" [(ngModel)]="filterStatus" id="exampleFormControlSelect1">
                  <option></option>
                  <option>Created</option>
                  <option>Completed</option>
                  <option>Receiving</option>
                </select>
              </th>
              <th>
                <input cInput placeholder="Date" #drp="bsDaterangepicker" bsDaterangepicker [(ngModel)]="filterDate" style="font-size: 0.7em;">
              </th>
              <th></th>
              <th style="text-align: right;">
                <!--button type="button" (click)="search()" class="btn btn-outline-secondary btn-transparent">Search</button-->
                <button type="button" (click)="reset()" class="btn btn-outline-secondary" 
                [ngClass]="{'reset-active':!(filterID==''&&filterName==''&&filterStatus==''&&filterDate==null),'reset-deactive':(filterID==''&&filterName==''&&filterStatus==''&&filterDate==null)}">{{"Reset" | translate}}</button>
              </th>
            </tr>
          </thead>
          <tbody style="text-align: center;">
            <tr *ngFor="let outbounds of getFilteredPageData">
              <td  class="table-body-text">{{ outbounds.shipment_id }}</td>
              <td  class="table-body-text"><a routerLink="">{{ outbounds.customer }}</a></td>
              <td>
                <c-badge [color]="getBadge(outbounds.status)">{{
                  outbounds.status
                  }}</c-badge>
              </td>
              <td class="table-body-text">{{ outbounds.created_on }}</td>
              <td class="table-body-text">{{ outbounds.items_received }} / {{ outbounds.items_sent }}</td>
              
              <td style="text-align: right;">
                <button type="button" class="btn btn-outline-secondary btn-transparent" size="sm" routerLink="">...</button>
              </td>
            </tr>
          </tbody>
        </table>
        <pagination [totalItems]="getFilteredData.length" (pageChanged)="pageChanged($event)" [itemsPerPage]="page"
          [(ngModel)]="currentPage" [maxSize]="4" [rotate]="true"></pagination>
      </c-card-body>
    </c-card>
  </c-col>
</c-row>